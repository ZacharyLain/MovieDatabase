CREATE TABLE category (
  cat_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  cat_name VARCHAR(100),
  PRIMARY KEY (cat_id)
);

CREATE TABLE rating (
  rating_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  rating_name VARCHAR(50),
  PRIMARY KEY (rating_id)
);

CREATE TABLE movie_role (
  mr_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  mr_roleName VARCHAR(100),
  PRIMARY KEY (mr_id)
);

CREATE TABLE person (
  p_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  p_firstName VARCHAR(100),
  p_lastName VARCHAR(100),
  p_gender VARCHAR(100),
  PRIMARY KEY (p_id)
);

CREATE TABLE movie (
  m_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  m_title VARCHAR(255) NOT NULL,
  m_date INT, -- Adjusted to INT for the year
  m_length INT,
  cat_id INT,
  rating_id INT,
  PRIMARY KEY (m_id),
  FOREIGN KEY (cat_id) REFERENCES category(cat_id),
  FOREIGN KEY (rating_id) REFERENCES rating(rating_id)
);

CREATE TABLE movie_people_role (
  mrp_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  mr_id INT NOT NULL,
  m_id INT NOT NULL,
  p_id INT NOT NULL,
  compensation INT,
  PRIMARY KEY (mr_id, p_id, m_id),
  FOREIGN KEY (mr_id) REFERENCES movie_role(mr_id),
  FOREIGN KEY (p_id) REFERENCES person(p_id),
  FOREIGN KEY (m_id) REFERENCES movie(m_id)
);

-- Inserting sample data
-- Categories
INSERT INTO category VALUES (1, 'Action');
INSERT INTO category VALUES (2, 'Animation');
INSERT INTO category VALUES (3, 'Comedy');
INSERT INTO category VALUES (4, 'Drama');
INSERT INTO category VALUES (5, 'Family');
INSERT INTO category VALUES (6, 'Horror');
INSERT INTO category VALUES (7, 'Romance');
INSERT INTO category VALUES (8, 'Fantasy');

-- Ratings
INSERT INTO rating VALUES (1, 'G');
INSERT INTO rating VALUES (2, 'R');
INSERT INTO rating VALUES (3, 'PG');
INSERT INTO rating VALUES (4, 'PG-13');

-- Movie Roles
INSERT INTO movie_role VALUES ('Director');
INSERT INTO movie_role VALUES ('Writer');
INSERT INTO movie_role VALUES ('Actor');
INSERT INTO movie_role VALUES ('Producer');

-- People
INSERT INTO person (p_firstName, p_lastName, p_gender) VALUES ('John', 'Doe', 'Male');
INSERT INTO person (p_firstName, p_lastName, p_gender) VALUES ('Jane', 'Doe', 'Female');
INSERT INTO person (p_firstName, p_lastName, p_gender) VALUES ('Alice', 'Smith', 'Female');
INSERT INTO person (p_firstName, p_lastName, p_gender) VALUES ('Bob', 'Jones', 'Male');

-- Movies with year only
INSERT INTO movie (m_title, m_date, m_length, cat_id, rating_id) VALUES ('The Shawshank Redemption', 1994, 142, 1, 3);
INSERT INTO movie (m_title, m_date, m_length, cat_id, rating_id) VALUES ('The Godfather', 1972, 175, 1, 3);
INSERT INTO movie (m_title, m_date, m_length, cat_id, rating_id) VALUES ('The Dark Knight', 2008, 152, 1, 2);
INSERT INTO movie (m_title, m_date, m_length, cat_id, rating_id) VALUES ('Life is Beautiful', 1997, 116, 2, 1);
INSERT INTO movie (m_title, m_date, m_length, cat_id, rating_id) VALUES ('Psycho', 1960, 109, 3, 3);
INSERT INTO movie (m_title, m_date, m_length, cat_id, rating_id) VALUES ('R-Rated Fantasy', 1994, 88, 8, 2);

-- Movie People Roles
INSERT INTO movie_people_role (mr_id, m_id, p_id, compensation) VALUES (1, 1, 1, 1000000);
INSERT INTO movie_people_role (mr_id, m_id, p_id, compensation) VALUES (2, 1, 1, 1000000);
INSERT INTO movie_people_role (mr_id, m_id, p_id, compensation) VALUES (2, 1, 2, 500000);
INSERT INTO movie_people_role (mr_id, m_id, p_id, compensation) VALUES (3, 1, 3, 200000);
INSERT INTO movie_people_role (mr_id, m_id, p_id, compensation) VALUES (1, 2, 1, 1000000);
INSERT INTO movie_people_role (mr_id, m_id, p_id, compensation) VALUES (2, 2, 2, 500000);
INSERT INTO movie_people_role (mr_id, m_id, p_id, compensation) VALUES (3, 2, 3, 200000);
INSERT INTO movie_people_role (mr_id, m_id, p_id, compensation) VALUES (1, 3, 1, 1000000);
INSERT INTO movie_people_role (mr_id, m_id, p_id, compensation) VALUES (2, 3, 2, 500000);
INSERT INTO movie_people_role (mr_id, m_id, p_id, compensation) VALUES (3, 3, 3, 200000);

-- Queries
-- Find all movies directed by John Doe.
SELECT
  mpr.mrp_id,
  m.m_id,
  m.m_title,
  p.p_id,
  p.p_firstName || ' ' || p.p_lastName as full_name,
  mr.mr_id, mr.mr_roleName,
  mpr.compensation
  FROM movie_people_role mpr
  JOIN person p on mpr.p_id = p.p_id
  JOIN movie m on mpr.m_id = m.m_id
  JOIN movie_role mr on mpr.mr_id = mr.mr_id
  WHERE p.p_firstName = 'John'
  AND p.p_lastName = 'Doe'
  AND mr.mr_roleName = 'Director';
-- Find all movies released in 1994.
SELECT
  m.m_id,
  m.m_title,
  m.m_date,
  m.m_length,
  c.cat_name,
  r.rating_name
  FROM movie m
  JOIN category c on m.cat_id = c.cat_id
  JOIN rating r on m.rating_id = r.rating_id
  WHERE m.m_date = 1994;
-- Find the highest amount of money earned by an actress in a movie. 
SELECT
  p.p_firstName || ' ' || p.p_lastName as full_name,
  p.p_gender,
  m.m_title,
  mr.mr_roleName,
  mpr.compensation
  FROM movie_people_role mpr
  JOIN person p on mpr.p_id = p.p_id
  JOIN movie m on mpr.m_id = m.m_id
  JOIN movie_role mr on mpr.mr_id = mr.mr_id
  WHERE mpr.compensation = (SELECT MAX(mpr2.compensation) FROM movie_people_role mpr2
                            JOIN movie_role mr2 on mpr2.mr_id = mr2.mr_id
                            JOIN person p2 on mpr2.p_id = p2.p_id 
                            WHERE mr2.mr_roleName = 'Actor' AND p2.p_gender = 'Female');
-- Find actors and actresses who joined a movie. 
SELECT
  p.p_firstName || ' ' || p.p_lastName as full_name,
  m.m_title
  FROM movie_people_role mpr
  JOIN person p on mpr.p_id = p.p_id
  JOIN movie m on mpr.m_id = m.m_id
  JOIN movie_role mr on mpr.mr_id = mr.mr_id
  WHERE mr.mr_roleName = 'Actor'
  AND m.m_title = 'The Shawshank Redemption';
-- Find movies that people are more watching for an actor or an actress.
SELECT
  p.p_firstName || ' ' || p.p_lastName as full_name,
  m.m_title
  FROM movie_people_role mpr
  JOIN person p on mpr.p_id = p.p_id
  JOIN movie m on mpr.m_id = m.m_id
  JOIN movie_role mr on mpr.mr_id = mr.mr_id
  WHERE mr.mr_roleName = 'Actor';

-- reset database
delete from movie_people_role;
delete from movie;
delete from person;
delete from movie_role;
delete from rating;
delete from category;


-- reset auto increment with the values above already inside if they are not added correctly
alter table movie modify m_id generated always as identity restart start with 1;
alter table movie_role modify mr_id generated always as identity restart start with 5;
alter table person modify p_id generated always as identity restart start with 5;